/*
 *	Target bird configuration
 */

# Override router ID
router id 11.2.0.2;

# Define a route filter...
filter fnat {
	if net ~ [0.0.0.0/0, 192.168.0.0/16+] then
    {
        reject;
    }
	else
    {
        accept;
    }
}

# The direct protocol automatically generates device routes to
# all network interfaces. Can exist in as many instances as you wish
# if you want to populate multiple routing tables with device routes.
protocol direct {
	interface "eth*";	# Restrict network interfaces it works with
}

# This pseudo-protocol performs synchronization between BIRD's routing
# tables and the kernel. If your kernel supports multiple routing tables
# (as Linux 2.2.x does), you can run multiple instances of the kernel
# protocol and synchronize different kernel tables with different BIRD tables.
protocol kernel {
	learn off;			# Learn all alien routes from the kernel
	persist off;		# Don't remove routes on bird shutdown
	scan time 10;		# Scan kernel routing table every 20 seconds
	import none;		# Default is import all
	export filter fnat;		# Default is export none
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
	scan time 10;		# Scan interfaces every 10 seconds
}

# Static routes (again, there can be multiple instances, so that you
# can disable/enable various groups of static routes on the fly).
protocol static {
}

protocol bgp eBGP {
    description "eBGP";
    local 11.2.0.2 as 64504;
    neighbor 11.2.0.1 as 64501;
    hold time 60;
    startup hold time 60;
    connect retry time 30;
    keepalive time 20;
    start delay time 5;
    error wait time 60, 300;
    error forget time 300;
    source address 11.2.0.2;
    export filter fnat;
    import filter fnat;
}